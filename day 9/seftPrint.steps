step 0| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99]
step 1| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99]
step 2| [4] opcode: 1 (add), arg1: 0, arg2: 1, result: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:1]
step 3| [8] opcode: 8 (equals), arg1: 1, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:1 101:0]
step 4| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:1 101:0]
step 5| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:1 101:0]
step 6| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:1 101:0]
step 7| [4] opcode: 1 (add), arg1: 1, arg2: 1, result: 2, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:2 101:0]
step 8| [8] opcode: 8 (equals), arg1: 2, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:2 101:0]
step 9| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:2 101:0]
step 10| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:2 101:0]
step 11| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:2 101:0]
step 12| [4] opcode: 1 (add), arg1: 2, arg2: 1, result: 3, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:3 101:0]
step 13| [8] opcode: 8 (equals), arg1: 3, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:3 101:0]
step 14| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:3 101:0]
step 15| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:3 101:0]
step 16| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:3 101:0]
step 17| [4] opcode: 1 (add), arg1: 3, arg2: 1, result: 4, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:4 101:0]
step 18| [8] opcode: 8 (equals), arg1: 4, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:4 101:0]
step 19| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:4 101:0]
step 20| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:4 101:0]
step 21| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:4 101:0]
step 22| [4] opcode: 1 (add), arg1: 4, arg2: 1, result: 5, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:5 101:0]
step 23| [8] opcode: 8 (equals), arg1: 5, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:5 101:0]
step 24| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:5 101:0]
step 25| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:5 101:0]
step 26| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:5 101:0]
step 27| [4] opcode: 1 (add), arg1: 5, arg2: 1, result: 6, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:6 101:0]
step 28| [8] opcode: 8 (equals), arg1: 6, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:6 101:0]
step 29| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:6 101:0]
step 30| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:6 101:0]
step 31| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:6 101:0]
step 32| [4] opcode: 1 (add), arg1: 6, arg2: 1, result: 7, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:7 101:0]
step 33| [8] opcode: 8 (equals), arg1: 7, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:7 101:0]
step 34| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:7 101:0]
step 35| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:7 101:0]
step 36| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:7 101:0]
step 37| [4] opcode: 1 (add), arg1: 7, arg2: 1, result: 8, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:8 101:0]
step 38| [8] opcode: 8 (equals), arg1: 8, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:8 101:0]
step 39| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:8 101:0]
step 40| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:8 101:0]
step 41| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:8 101:0]
step 42| [4] opcode: 1 (add), arg1: 8, arg2: 1, result: 9, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:9 101:0]
step 43| [8] opcode: 8 (equals), arg1: 9, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:9 101:0]
step 44| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:9 101:0]
step 45| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:9 101:0]
step 46| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:9 101:0]
step 47| [4] opcode: 1 (add), arg1: 9, arg2: 1, result: 10, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:10 101:0]
step 48| [8] opcode: 8 (equals), arg1: 10, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:10 101:0]
step 49| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:10 101:0]
step 50| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:10 101:0]
step 51| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:10 101:0]
step 52| [4] opcode: 1 (add), arg1: 10, arg2: 1, result: 11, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:11 101:0]
step 53| [8] opcode: 8 (equals), arg1: 11, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:11 101:0]
step 54| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:11 101:0]
step 55| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:11 101:0]
step 56| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:11 101:0]
step 57| [4] opcode: 1 (add), arg1: 11, arg2: 1, result: 12, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:12 101:0]
step 58| [8] opcode: 8 (equals), arg1: 12, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:12 101:0]
step 59| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:12 101:0]
step 60| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:12 101:0]
step 61| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:12 101:0]
step 62| [4] opcode: 1 (add), arg1: 12, arg2: 1, result: 13, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:13 101:0]
step 63| [8] opcode: 8 (equals), arg1: 13, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:13 101:0]
step 64| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:13 101:0]
step 65| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:13 101:0]
step 66| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:13 101:0]
step 67| [4] opcode: 1 (add), arg1: 13, arg2: 1, result: 14, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:14 101:0]
step 68| [8] opcode: 8 (equals), arg1: 14, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:14 101:0]
step 69| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:14 101:0]
step 70| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:14 101:0]
step 71| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:14 101:0]
step 72| [4] opcode: 1 (add), arg1: 14, arg2: 1, result: 15, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:15 101:0]
step 73| [8] opcode: 8 (equals), arg1: 15, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:15 101:0]
step 74| [12] opcode: 6 (jump false), arg1: 0, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:15 101:0]
step 75| [0] opcode: 9 (relativeBase adj), arg1: 1, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:15 101:0]
step 76| [2] opcode: 4 (out), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:15 101:0]
step 77| [4] opcode: 1 (add), arg1: 15, arg2: 1, result: 16, memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:16 101:0]
step 78| [8] opcode: 8 (equals), arg1: 16, arg2: 16 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:16 101:1]
step 79| [12] opcode: 6 (jump false), arg1: 1, dest: 0 memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:16 101:1]
step 80| [15] opcode: 99 (halt), memory: map[ 0:109 1:1 2:204 3:-1 4:1001 5:100 6:1 7:100 8:1008 9:100 10:16 11:101 12:1006 13:101 14:0 15:99 100:16 101:1]
